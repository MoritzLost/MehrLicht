{% macro image(image, classes = [], lazy = false, sizes = ['100vw'], srcset = [], lightbox = false) %}
{% set src = image if (image | is_string) else image.name %}
{% set srcPath = '/photos/' + src %}
{% set dimensions = image_sizes[src] if src in image_sizes else null %}
{%- if lightbox -%}
    <a href="{{ srcPath | imageWidth(config.lightbox.imageWidth) }}" class="lightbox">
{%- endif -%}
<img src="{{ srcPath }}"
    {%- if dimensions %} width="{{ dimensions.width }}" height="{{ dimensions.height }}"{% endif %}
    {%- if image.alt %} alt="{{ image.alt }}"{% endif %}
    {%- if image.title %} title="{{ image.title }}"{% endif %}
    {%- if classes %} class="{{ classes | implodeTruthy(', ') }}"{% endif %}
    {%- if srcset %} srcset="{{ srcPath | widthsToSrcset(srcset) }}"{% endif %}
    {%- if sizes %} sizes="{{ sizes }}"{% endif %}
    {%- if lazy %} loading="lazy"{% endif %}>
{%- if lightbox -%}
    </a>
{%- endif -%}
{% endmacro %}

{% macro figure(base_image, caption = null, base_class = 'figure', lazy = false, sizes = ['100vw'], srcset = [], lightbox = false)%}
{% set caption = caption if caption else base_image.caption %}
<figure class="{{ base_class }}__figure">
    {{- image(
        base_image,
        [base_class + '__image'],
        lazy,
        sizes,
        srcset,
        lightbox
    ) -}}
    {%- if caption -%}
        <figcaption class="{{ base_class }}__caption">
            {{- caption -}}
        </figcaption>
    {%- endif -%}
</figure>
{% endmacro %}

{% macro one_column(photos, size = "full", lightbox = true) %}
<div class="one-column">
    {%- for entry in photos -%}
        {{- figure(
            entry,
            entry.caption,
            'one-column',
            not loop.first,
            responsive_images.oneColumn[size].sizes,
            responsive_images.oneColumn[size].srcset,
            lightbox
        ) -}}
    {%- endfor -%}
</div>
{% endmacro %}

{% macro two_columns(photos, size = "full", lightbox = true) %}
<div class="two-columns">
    {%- for entry in photos -%}
        {{- figure(
            entry,
            entry.caption,
            'two-columns',
            not loop.first,
            responsive_images.twoColumns[size].sizes,
            responsive_images.twoColumns[size].srcset,
            lightbox
        ) -}}
    {%- endfor -%}
</div>
{% endmacro %}

{% macro three_columns(photos, size = "full", lightbox = true) %}
<div class="three-columns">
    {%- for entry in photos -%}
        {{- figure(
            entry,
            entry.caption,
            'three-columns',
            not loop.first,
            responsive_images.threeColumns[size].sizes,
            responsive_images.threeColumns[size].srcset,
            lightbox
        ) -}}
    {%- endfor -%}
</div>
{% endmacro %}

{% macro teaser(base_image, caption = false, date = false, link = false, sizes = [], srcset = [], lazy = false, lightbox = false) %}
{% import "macros/utils.njk" as utils %}
{%- set caption = caption|default(base_image.caption, true) -%}
<figure class="teaser">
    {{- image(
        base_image, [
            'teaser__image'
        ],
        lazy,
        sizes,
        srcset,
        lightbox and not link
    ) }}
    {%- if caption -%}
        <figcaption class="teaser__caption">
            {{- caption -}}
        </figcaption>
    {%- endif -%}
    {%- if date -%}
        <footer class="teaser__footer">
            <time class="teaser__time" datetime="{{ date | date_iso }}">
                {{- date | date -}}
            </time>
        </footer>
    {%- endif -%}
    {%- if link -%}
        {{ utils.link(link.url, link.text, link.icon, ['teaser__link']) }}
    {%- endif -%}
</figure>
{% endmacro %}

{% macro teaser_grid(photos, size = "full") %}
<div class="teaser-grid">
    {%- for entry in photos -%}
        {{- teaser(
            entry.image,
            entry.caption|default(entry.image.caption),
            entry.date,
            entry.link,
            responsive_images.threeColumn[size].sizes,
            responsive_images.threeColumn[size].srcset,
            not loop.first
        ) -}}
    {%- endfor -%}
</div>
{% endmacro %}
